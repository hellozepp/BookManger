/*
 * BookAddInterFrm.java
 *
 * Created on __DATE__, __TIME__
 */

package com.hellozepp.view;

import com.hellozepp.dao.BookDao;
import com.hellozepp.dao.BookTypeDao;
import com.hellozepp.model.Book;
import com.hellozepp.model.BookType;
import com.hellozepp.util.DbUtil;
import com.hellozepp.util.StringUtil;
import org.apache.commons.lang.StringUtils;

import javax.swing.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.sql.Connection;
import java.sql.ResultSet;

/**
 * @author __USER__
 */
public class BookAddInterFrm extends javax.swing.JInternalFrame {
    DbUtil dbUtil = new DbUtil();
    BookTypeDao bookTypeDao = new BookTypeDao();
    BookDao bookDao = new BookDao();

    /**
     * Creates new form BookAddInterFrm
     */
    public BookAddInterFrm() {
        initComponents();
        this.setLocation(200, 50);
        this.fillBookType();
        this.jrb_man.setSelected(true);
        if (this.jcb_BookType.getItemCount() > 0) {
            this.jcb_BookType.setSelectedIndex(0);
        }
    }

    private void fillBookType() {
        Connection con = null;
        BookType bookType = null;
        try {
            con = dbUtil.getCon();
            ResultSet rs = bookTypeDao.bookTypeList(con, new BookType());
            while (rs.next()) {
                bookType = new BookType();
                bookType.setId(rs.getInt("id"));
                bookType.setBookTypeName(rs.getString("bookTypeName"));
                this.jcb_BookType.addItem(bookType);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                dbUtil.closeCon(con);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    //GEN-BEGIN:initComponents
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        bookNameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        authorTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jrb_man = new javax.swing.JRadioButton();
        jrb_female = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        priceTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcb_BookType = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookDescTxt = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("图书添加");

        jLabel1.setText("图书名称：");

        jLabel2.setText("图书作者：");

        jLabel3.setText("作者性别：");

        jrb_man.setText("男");

        jrb_female.setText("女");

        jLabel4.setText("图书价格：");

        jLabel5.setText("图书类别：");


        jLabel6.setText("图书描述：");

        bookDescTxt.setColumns(20);
        bookDescTxt.setRows(5);
        jScrollPane1.setViewportView(bookDescTxt);

        jButton1.setIcon(new javax.swing.ImageIcon(MainFrm.imagePath + "add.png"));
        jButton1.setText("添加");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(MainFrm.imagePath + "reset.png"));
        jButton2.setText("重置");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblNewLabel = new JLabel("图书进价：");

        purchasePriceTxt = new JTextField();

        出版社 = new JLabel("出版社：");

        pressTxt = new JTextField();
        pressTxt.setColumns(10);

        ceshuText = new JLabel("册   数：");

        copiesTxt1 = new JTextField();
        copiesTxt1.setColumns(10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(55)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(出版社)
        					.addContainerGap())
        				.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        					.addGroup(layout.createSequentialGroup()
        						.addComponent(jLabel6)
        						.addGap(37)
        						.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
        						.addGap(44))
        					.addGroup(layout.createSequentialGroup()
        						.addGroup(layout.createParallelGroup(Alignment.LEADING)
        							.addGroup(layout.createSequentialGroup()
        								.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
        								.addGap(18)
        								.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 112, GroupLayout.PREFERRED_SIZE))
        							.addGroup(layout.createSequentialGroup()
        								.addGroup(layout.createParallelGroup(Alignment.LEADING)
        									.addComponent(jLabel1)
        									.addComponent(jLabel3)
        									.addComponent(jLabel5))
        								.addGap(29)
        								.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        									.addComponent(jcb_BookType, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        									.addGroup(layout.createSequentialGroup()
        										.addComponent(jrb_man, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
        										.addPreferredGap(ComponentPlacement.UNRELATED)
        										.addComponent(jrb_female, 0, 0, Short.MAX_VALUE))
        									.addComponent(bookNameTxt, GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        									.addComponent(pressTxt))
        								.addGap(63)
        								.addGroup(layout.createParallelGroup(Alignment.LEADING)
        									.addComponent(jLabel2)
        									.addComponent(jLabel4)
        									.addComponent(lblNewLabel)
        									.addComponent(ceshuText))
        								.addGap(33)
        								.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        									.addComponent(copiesTxt1)
        									.addComponent(purchasePriceTxt)
        									.addComponent(priceTxt)
        									.addComponent(authorTxt, GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))))
        						.addContainerGap(72, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(32)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel1)
        				.addComponent(bookNameTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel2)
        				.addComponent(authorTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(35)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel3)
        				.addComponent(jrb_man)
        				.addComponent(jrb_female)
        				.addComponent(jLabel4)
        				.addComponent(priceTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(46)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel5)
        				.addComponent(jcb_BookType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblNewLabel)
        				.addComponent(purchasePriceTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(44)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(出版社)
        				.addComponent(pressTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(ceshuText)
        				.addComponent(copiesTxt1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 124, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel6))
        			.addGap(35)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton1)
        				.addComponent(jButton2))
        			.addGap(26))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>

    //GEN-END:initComponents
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        String bookName = this.bookNameTxt.getText();
        String author = this.authorTxt.getText();
        String price = this.priceTxt.getText();
        String bookDesc = this.bookDescTxt.getText();
        Float purchasePrice;
        try {
            purchasePrice = Float.parseFloat(copiesTxt1.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "进价必须为数值！");
            return;
        }
        Integer copies;
        if (StringUtils.isNotBlank(copiesTxt1.getText()) && StringUtils.isNumeric(copiesTxt1.getText())) {
            copies = Integer.parseInt(copiesTxt1.getText());
        } else {
            JOptionPane.showMessageDialog(null, "册数必须为数值！");
            return;
        }
        String press = pressTxt.getText();
        if (StringUtil.isEmpty(press)) {
            JOptionPane.showMessageDialog(null, "出版社不能为空！");
            return;
        }
        if (StringUtil.isEmpty(bookName)) {
            JOptionPane.showMessageDialog(null, "图书名称不能为空！");
            return;
        }
        if (StringUtil.isEmpty(author)) {
            JOptionPane.showMessageDialog(null, "图书作者不能为空！");
            return;
        }
        if (StringUtil.isEmpty(price)) {
            JOptionPane.showMessageDialog(null, "图书价格不能为空！");
            return;
        }


        String sex = "";
        if (this.jrb_man.isSelected()) {
            sex = "男";
        } else if (this.jrb_female.isSelected()) {
            sex = "女";
        }

        BookType bookType = (BookType) this.jcb_BookType.getSelectedItem();
        int bookTypeId = bookType.getId();
        Book book = new Book(bookName, author, sex, Float.parseFloat(price), bookDesc, bookTypeId, bookType.getBookTypeName(), press, copies, purchasePrice, 0);

        Connection con = null;
        try {
            con = dbUtil.getCon();
            int addNum = bookDao.bookAdd(con, book);
            if (addNum == 1) {
                JOptionPane.showMessageDialog(null, "图书添加成功！");
                this.resetValue();
            } else {
                JOptionPane.showMessageDialog(null, "图书添加失败！");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "图书添加失败！");
        } finally {
            try {
                dbUtil.closeCon(con);
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }


    private void resetValue() {
        this.bookNameTxt.setText("");
        this.authorTxt.setText("");
        this.jrb_man.setSelected(true);
        this.priceTxt.setText("");
        if (this.jcb_BookType.getItemCount() > 0) {
            this.jcb_BookType.setSelectedIndex(0);
        }
        this.bookDescTxt.setText("");
        pressTxt.setText("");
        ceshuText.setText("");
        copiesTxt1.setText("");
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        this.resetValue();
    }

    //GEN-BEGIN:variables
    // Variables declaration - do not modify
    private javax.swing.JTextField authorTxt;
    private javax.swing.JTextArea bookDescTxt;
    private javax.swing.JTextField bookNameTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcb_BookType;
    private javax.swing.JRadioButton jrb_female;
    private javax.swing.JRadioButton jrb_man;
    private javax.swing.JTextField priceTxt;
    private JLabel lblNewLabel;
    private JTextField purchasePriceTxt;
    private JLabel 出版社;
    private JTextField pressTxt;
    private JLabel ceshuText;
    private JTextField copiesTxt1;
}